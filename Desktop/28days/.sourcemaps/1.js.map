{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/validators/email.ts","../../src/validators/password.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n  ],\n})\nexport class LoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { FormControl } from '@angular/forms';\n\nexport class EmailValidator {\n\n  static isValid(control: FormControl){\n    const re = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/.test(control.value);\n\n    if (re){\n      return null;\n    }\n\n    return {\n      \"invalidEmail\": true\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.ts","import { FormControl } from '@angular/forms';\n\nexport class PasswordValidator {\n\n  static isValid(control: FormControl){\n  \tconst re = /\\d/.test(control.value) && /[a-zA-Z]/.test(control.value);\n\n    if (re){\n      return null;\n    }\n\n    return {\n      \"invalidPassword\": true\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/validators/password.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, LoadingController, Loading, AlertController } from 'ionic-angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthProvider } from '../../providers/auth/auth';\nimport { EmailValidator } from '../../validators/email';\nimport { PasswordValidator } from '../../validators/password';\nimport { Storage } from '@ionic/storage';\n\n/**\n * Generated class for the LoginPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html'\n})\nexport class LoginPage {\n  loginForm: FormGroup;\n  loading: Loading;\n  constructor(public navCtrl: NavController, public auth: AuthProvider, public formBuilder: FormBuilder,\n    public alertCtrl: AlertController, public loadingCtrl: LoadingController, public storage: Storage) {\n    this.loginForm = formBuilder.group({\n      email: ['', Validators.compose([Validators.required, EmailValidator.isValid])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(8), PasswordValidator.isValid])]\n    });\n  }\n\n  signin() {\n    if (!this.loginForm.valid){\n      console.log(this.loginForm.value.email + '/' + this.loginForm.value.password);\n      let alert = this.alertCtrl.create({\n        title: '로그인 오류',\n        message: '이메일 주소와 비밀번호의 형식이<br>올바르지 않습니다. 다시 확인해주세요!',\n        buttons: [\n          {\n            text: '확인',\n            role: 'cancel'\n          }\n        ]\n      });\n      alert.present();\n    } else {\n      this.auth.loginUser(this.loginForm.value.email, this.loginForm.value.password).then((authData) => {\n        this.storage.set('localcred', {\n          email: this.loginForm.value.email,\n          password: this.loginForm.value.password\n        });\n        this.navCtrl.setRoot('HomePage');\n      }, (error) => {\n        console.log(JSON.stringify(error));\n        var message;\n        if (error.code == 'auth/wrong-password') {\n          message = '비밀번호가 맞지 않습니다.<br>다시 확인해주세요!';\n        } else if (error.code == 'auth/user-not-found') {\n          message = '등록되지 않은 이메일 주소입니다.<br>다시 확인해주세요!';\n        } else {\n          message = error.message;\n          console.log('error msg' + message);\n        }\n        this.loading.dismiss().then(() => {\n          let alert = this.alertCtrl.create({\n            title: '로그인 오류',\n            message: message,\n            buttons: [\n              {\n                text: '확인',\n                role: 'cancel'\n              }\n            ]\n          });\n          alert.present();\n        });\n      });\n      this.loading = this.loadingCtrl.create({\n        dismissOnPageChange: true\n      });\n      this.loading.present();\n    }\n  }\n\n  passwordreset() {\n    this.navCtrl.push('PasswordresetPage');\n  }\n  \n  signup() {\n    this.navCtrl.push('SignupPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}